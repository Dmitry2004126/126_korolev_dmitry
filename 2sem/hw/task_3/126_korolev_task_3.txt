QuickSort|12|int base = split(data, e,b); -> int base = split(data, b,e);|QuickSort_sortUnsortedArray_ArrayIsSorted()
QuickSort|24|swap(data, left     , baseElem); -> swap(data, left - 1    , baseElem);|QuickSort_sortUnsortedArray_ArrayIsSorted()
QuickSort|25|baseElem = left    ; -> baseElem = left -1   ;|QuickSort_ArrayWithTwoUnsortedNumbers_ArrayIsSorted()
QuickSort|13|qSortRec(data, b, base - 2); -> qSortRec(data, b, base - 1);|QuickSort_HugeUnsortedArray_ArrayIsSorted()
QuickSort|14|qSortRec(data, base + 2, e); -> qSortRec(data, base + 1, e);|QuickSort_HugeUnsortedArray_ArrayIsSorted()
QuickSort|29|swap(data, left +1  , right); -> swap(data, left   , right);|QuickSort_ArrayWithTwoEqualNumbers_ArrayIsSorted() #до того как исправить ошибку, тест загружается долго(так и не загрузился), после исправления ошибки тест прошел

MergeSort|19|merge(buffer, sorting, begin, middle - begin , end - middle); -> merge(buffer, sorting, begin, middle - begin + 1 , end - middle);|MergeSort_sortUnsortedArray_ArrayIsSorted()
MergeSort|35|else if (comparator.compare(from[firstFocus], from[secondFocus]) > 0) -> else if (comparator.compare(from[firstFocus], from[secondFocus]) < 0)|MergeSort_sortUnsortedArray_ArrayIsSorted()
MergeSort|32|to[resPos] = from[secondFocus++]; -> to[resPos++] = from[secondFocus++];|MergeSort_ArrayWithFirstUnsortedElem_ArrayIsSorted()
MergeSort|17|mergeSortRec(sorting,buffer, begin, middle); -> mergeSortRec(buffer,sorting, begin, middle);|MergeSort_ArrayWithFirstUnsortedElem_ArrayIsSorted()
MergeSort|18|mergeSortRec(sorting,buffer, middle + 1, end); -> mergeSortRec(buffer,sorting, middle + 1, end);|MergeSort_UnsortedArrayWithTwoEqualsNumbers_ArrayIsSorted()
MergeSort|34|to[resPos++] = from[firstFocus]; -> to[resPos++] = from[firstFocus++];|MergeSort_ArrayWithTwoPairsOfEqualsNumbers_ArrayIsSorted()

HeapSort|10|swap(0, data.length - sortedSize); -> swap(0, data.length - sortedSize -1); |HeapSort_SortUnsortedArray_ArrayIsSorted() 
HeapSort|17|for (int i = start; i >= 1; --i) -> for (int i = start; i >= 0; --i)|HeapSort_SortSortedArray_ArrayIsTheSame() 
HeapSort|18|siftDown(i, 2 * i, 2 * i + 1, data.length); -> siftDown(i, 2 * i + 1, 2 * i + 2, data.length);|HeapSort_SortUnsortedArrayWithFiveNumbers_ArrayIsSorted()
HeapSort|38|siftDown(right, 2 * right + 1, 2 * right + 2, data.length); -> siftDown(right, 2 * right + 1, 2 * right + 2, size);|HeapSort_UnsortedArray_ArrayIsSorted() 
HeapSort|34|siftDown(left, 2 * left, 2 * left + 1, size); -> siftDown(left, 2 * left + 1, 2 * left + 2, size);|HeapSort_SortUnsortedArray2_ArrayIsSorted()